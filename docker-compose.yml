version: "3"

# ================== Description of KnowYourSources Services ==================

# knowyoursources-zookeeper:  Zookeeper service for orchestrating Kafka brokers
# knowyoursources-kafka-1:    Kafka broker 1 to store data
# knowyoursources-kafka-2:    Kafka broker 2 to store data
# crawler:                    to download, unzip and parse data from kaggle and push it to kafka
# qdrant-vector-db:           Vector database to store vectors / embeddings and perform the similarity search
# web:                        Frontend service to provide a UI with react + typescript
# nginx:                      Nginx service to provide a reverse proxy to the frontend and vector db

# ================== Description of KnowYourSources Services ==================

services: 

  knowyoursources-zookeeper:
    container_name: knowyoursources-zookeeper-1
    image: aimvector/zookeeper:3.6.1
    build:
      context: kafka/zookeeper/
    volumes:
      - ./kafka/config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
      - ./kafka/data/zookeeper-1/:/tmp/zookeeper/

  knowyoursources-kafka-1:
    container_name: knowyoursources-kafka-1
    image: aimvector/kafka:3.6.1
    build: 
      context: kafka/
    volumes:
      - ./kafka/config/kafka-1/server.properties:/kafka/config/server.properties
      - ./kafka/data/kafka-1/:/tmp/kafka-logs/

  knowyoursources-kafka-2:
    container_name: knowyoursources-kafka-2
    image: aimvector/kafka:3.6.1
    build: 
      context: kafka/
    volumes:
      - ./kafka/config/kafka-2/server.properties:/kafka/config/server.properties
      - ./kafka/data/kafka-2/:/tmp/kafka-logs/

  crawler:
    container_name: knowyoursources-crawler
    build: crawler/
    volumes:
      - ./crawler/data/:/app/data/
    depends_on:
      - knowyoursources-zookeeper
      - knowyoursources-kafka-1
      - knowyoursources-kafka-2
    command: ["python3", "main.py", "--source", "${KAGGLE_SOURCE}", "--target", "${TARGET_CRAWL_COLS}"]

  knowyoursources-embedder: 
    container_name: knowyoursources-embedder
    build: embedding_service/
    environment:
      - COLLECTION_NAME=${QDRANT_COLLECTION_NAME}
    volumes:
      - ./embedding_service/:/app/
    depends_on:
      - knowyoursources-zookeeper
      - knowyoursources-kafka-1
      - knowyoursources-kafka-2
      - qdrant-vector-db

    command: ["python", "embedder.py", "--collection", "${QDRANT_COLLECTION_NAME}"]

  web:
    container_name: knowyoursources-frontend
    build: frontend/
    depends_on:
      - knowyoursources-backend

  qdrant-vector-db:
    container_name: knowyoursources-qdrant-vector-db
    image: qdrant/qdrant
    volumes:
      - ./qdrant_data:/qdrant/storage/

  knowyoursources-backend: 
    container_name: knowyoursources-backend
    build: backend/
    environment:
      - FRONTEND_HOST=${DEPLOYMENT_SERVER_NAME}
    ports: 
      - "8000:8000"
    depends_on:
      - knowyoursources-zookeeper
      - knowyoursources-kafka-1
      - knowyoursources-kafka-2
      - qdrant-vector-db
      - knowyoursources-embedder

  nginx:
    container_name: knowyoursources-nginx
    build: .
    ports:
      - "80:80"  
    environment:
      - NGINX_SERVER_NAME=${DEPLOYMENT_SERVER_NAME}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - qdrant-vector-db
      - web
    entrypoint: ["nginx", "-g", "daemon off;"]
